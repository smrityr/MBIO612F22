# installing the dslabs packa
install.packages("dslabs")
library(dslabs)
**This is a Markdown Test**
# Write you code in this cell
x <- runif(5, min = 10, max = 100)
y = mean(x)
print (x)
print(y)
# Write you code in this cell
sec_per_min <- 60
sec_per_hour <- (sec_per_min*60)
sec_per_day <- sec_per_hour*24
print(sec_per_day)
p <- c(1, 2, 3, "Hi")
print (q)
print(p)
p <- c(1, 2, 3, FALSE)+1
print(p)
q <- p+1
print (q)
p <- c(1, 2, 3, FALSE)
p <- c(1, 2, 3, FALSE)
print(p)
q <- p+1
print (q)
# Write you code in this cell
x_axis <- seq(0:10, 0.5)
# Write you code in this cell
x_axis <- seq(0, 10, by = 0.5)
# Write you code in this cell
y_axis <- $x^2 + 2x + 3 $
# Write you code in this cell
y_axis <- x_axis$ x^2 + 2x + 3 $
# Chunk 1
#### ** This is a Markdown Test**
The variable y contains the mean of 5 values that were randomly assigned to  ***x***
# Chunk 2
# Write you code in this cell
x <- runif(5, min = 10, max = 100)
y = mean(x)
print (x)
print(y)
# Chunk 3
# Write you code in this cell
sec_per_min <- 60
sec_per_hour <- (sec_per_min*60)
sec_per_day <- sec_per_hour*24
print(sec_per_day)
# Chunk 4
# Write you code in this cell
x_axis <- seq(0, 10, by = 0.5)
# Chunk 1
#### ** This is a Markdown Test**
The variable y contains the mean of 5 values that were randomly assigned to  ***x***
# Chunk 2
# Write you code in this cell
x <- runif(5, min = 10, max = 100)
y = mean(x)
print (x)
print(y)
# Chunk 3
# Write you code in this cell
sec_per_min <- 60
sec_per_hour <- (sec_per_min*60)
sec_per_day <- sec_per_hour*24
print(sec_per_day)
# Chunk 4
# Write you code in this cell
x_axis <- seq(0, 10, by = 0.5)
# Write you code in this cell
y_axis <- x_axis$ x^2 + 2x + 3 $
# Write you code in this cell
y_axis <- data.frame($x^2 + 2x + 3 $)
# Write you code in this cell
y_axis <- data.frame(x_axis$^2)
# Write you code in this cell
y_axis <- (x_axis)^2 + 2 (x_axis) + 3
# Write you code in this cell
y_axis =  ((x_axis^2) + 2 * (x_axis) + 3)
# set working directory
setwd("C:/Users/smrit/Documents/GitHub/MBIO612F22/1_Introduction")
library("ggplot2")
install.packages(c("broom", "bslib", "callr", "cli", "DBI", "dbplyr", "dplyr", "dtplyr", "evaluate", "farver", "forcats", "gargle", "generics", "googlesheets4", "gtable", "haven", "hms", "htmltools", "httr", "knitr", "lifecycle", "modelr", "openssl", "pillar", "processx", "ps", "Rcpp", "readxl", "reprex", "reticulate", "rlang", "rmarkdown", "rstudioapi", "rvest", "sass", "scales", "stringi", "stringr", "tibble", "tidyr", "tidyverse", "tinytex", "viridisLite", "xfun"))
# set working directory
setwd("C:/Users/smrit/Documents/GitHub/MBIO612F22/1_Introduction")
library("ggplot2")
# set working directory
setwd("C:/Users/smrit/Documents/GitHub/MBIO612F22/1_Introduction")
library(ggplot2)
# Write you code in this cell
qplot(x_axis, y_axis)
labs(x="My x_axis", y="My y_axis", title="First Plot")+
theme_classic()
# Write you code in this cell
qplot(x_axis, y_axis)
labs(x="My x_axis", y="My y_axis", title="First Plot")+
theme_classic()
# Write you code in this cell
qplot(x_axis, y_axis, geom = c("poin", "line"))
labs(x="My x_axis", y="My y_axis", title="First Plot")+
theme_classic()
# Write you code in this cell
plot(x_axis, y_axis, geom = c("poin", "line"))
labs(x="My x_axis", y="My y_axis", title="First Plot")+
theme_classic()
# Write you code in this cell
plot(x_axis, y_axis, geom = c("poin", "line"))
labs(x="My x_axis", y="My y_axis", title="First Plot")+
theme_classic()
# Write you code in this cell
plot(x_axis, y_axis, geom = c("poin", "line"))
labs(x="My x_axis", y="My y_axis", title="First Plot")+
theme_classic()
# Write you code in this cell
qplot (x_axis, y_axis, geom = c("point", "line"))
labs(x="My x_axis", y="My y_axis", title="First Plot")+
theme_classic()
# Write you code in this cell
qplot (x_axis, y_axis, geom = c("point", "line")) +
labs(x="My x_axis", y="My y_axis", title="First Plot")+
theme_classic()
# Write you code in this cell
qplot (x_axis, y_axis, geom = c("point", "line"))
# Write you code in this cell
qplot(x_axis, y_axis)
# set working directory
setwd("C:/Users/smrit/Documents/GitHub/MBIO612F22/1_Introduction")
# set working directory
setwd("C:/Users/smrit/Documents/GitHub/MBIO612F22/1_Introduction")
packages(ggplot)
install.packages(c("cli", "dplyr", "htmltools", "openssl", "rlang", "stringi", "tibble", "xfun"))
install.packages(c("cli", "dplyr", "htmltools", "openssl", "rlang", "stringi", "tibble", "xfun"))
install.packages(c("cli", "dplyr", "htmltools", "openssl", "rlang", "stringi", "tibble", "xfun"))
install.packages(c("cli", "dplyr", "htmltools", "openssl", "rlang", "stringi", "tibble", "xfun"))
install.packages(c("cli", "dplyr", "htmltools", "openssl", "rlang", "stringi", "tibble", "xfun"))
install.packages(c("cli", "dplyr", "htmltools", "openssl", "rlang", "stringi", "tibble", "xfun"))
install.packages(c("cli", "dplyr", "htmltools", "openssl", "rlang", "stringi", "tibble", "xfun"))
install.packages(c("cli", "dplyr", "htmltools", "openssl", "rlang", "stringi", "tibble", "xfun"))
install.packages(c("cli", "dplyr", "htmltools", "openssl", "rlang", "stringi", "tibble", "xfun"))
install.packages(c("cli", "dplyr", "htmltools", "openssl", "rlang", "stringi", "tibble", "xfun"))
install.packages("dplyr")
library(ggplot2)
